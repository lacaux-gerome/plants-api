"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const blog_1 = require("../fixtures/blog");
const runtime_1 = require("../runtime");
const getDMMF_1 = require("../runtime/getDMMF");
chalk_1.default.level = 0;
describe('optional to one relation', () => {
    let dmmf;
    beforeAll(async () => {
        dmmf = new runtime_1.DMMFClass(await getDMMF_1.getDMMF({ datamodel: blog_1.blog }));
    });
    test('null query', () => {
        const select = {
            where: {
                author: null,
            },
        };
        const document = runtime_1.makeDocument({
            dmmf,
            select,
            rootTypeName: 'query',
            rootField: 'findManyPost',
        });
        expect(String(runtime_1.transformDocument(document))).toMatchInlineSnapshot(`
      "query {
        findManyPost(where: {
          author: null
        }) {
          id
          createdAt
          updatedAt
          published
          title
          content
        }
      }"
    `);
    });
});
//# sourceMappingURL=optionalRelation.test.js.map